@page "/ho-so"
@model FashionShopSystem_FE.Pages.Client.ProfileModel
@{
    ViewData["Title"] = "Hồ sơ của tôi";
    Layout = "~/Pages/Shared/Client/_LayoutClient.cshtml";
}

<!-- Breadcrumb Section Begin -->
<section class="breadcrumb-option">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="breadcrumb__text">
                    <h4>Hồ sơ của tôi</h4>
                    <div class="breadcrumb__links">
                        <a href="/trang-chu">Trang chủ</a>
                        <span>Hồ sơ</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- Breadcrumb Section End -->

<!-- Profile Section Begin -->
<section class="profile spad">
    <div class="container">
        <div class="row">
            <div class="col-lg-8 offset-lg-2">
                <div class="profile__form">
                    <h3>Thông tin cá nhân</h3>
                    
                    <div id="profileContent">
                        <div class="loading-message">
                            <p>Đang tải thông tin...</p>
                        </div>
                    </div>
                    
                    <div id="userProfile" style="display: none;">
                        <div class="profile__item">
                            <label>Họ và tên:</label>
                            <span id="displayFullName">-</span>
                        </div>
                        
                        <div class="profile__item">
                            <label>Email:</label>
                            <span id="displayEmail">-</span>
                        </div>
                        
                        <div class="profile__item">
                            <label>Số điện thoại:</label>
                            <span id="displayPhone">Chưa cập nhật</span>
                        </div>
                        
                        <div class="profile__item">
                            <label>Địa chỉ:</label>
                            <span id="displayAddress">Chưa cập nhật</span>
                        </div>
                        
                        <div class="profile__item">
                            <label>Vai trò:</label>
                            <span id="displayRole">-</span>
                        </div>
                        
                        <div class="profile__item">
                            <label>Ngày đăng ký:</label>
                            <span id="displayCreatedAt">-</span>
                        </div>
                        
                        <div class="profile__item">
                            <label>Trạng thái:</label>
                            <span id="displayStatus">-</span>
                        </div>
                        
                        <div class="profile__actions">
                            <button type="button" class="site-btn" onclick="editProfile()">Chỉnh sửa thông tin</button>
                            <button type="button" class="site-btn-outline" onclick="window.location.href='/trang-chu'">Quay về trang chủ</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- Profile Section End -->

<script>
document.addEventListener('DOMContentLoaded', async function() {
    const token = localStorage.getItem('token');
    
    if (!token) {
        window.location.href = '/dang-nhap';
        return;
    }
    
    try {
        // Check cached data first
        const cachedUserInfo = localStorage.getItem('userInfo');
        const cacheTimestamp = localStorage.getItem('userInfoTimestamp');
        const cacheExpiry = 15 * 60 * 1000; // 15 minutes
        
        let userData = null;
        
        if (cachedUserInfo && cacheTimestamp) {
            const now = new Date().getTime();
            const cacheAge = now - parseInt(cacheTimestamp);
            
            if (cacheAge < cacheExpiry) {
                userData = JSON.parse(cachedUserInfo);
            }
        }
        
        // If no valid cached data, fetch from API
        if (!userData) {
            const response = await fetch('https://localhost:7242/api/User/me', {
                method: 'GET',
                headers: {
                    'Authorization': `Bearer ${token}`,
                    'Content-Type': 'application/json'
                }
            });
            
            if (response.ok) {
                userData = await response.json();
                // Update cache
                localStorage.setItem('userInfo', JSON.stringify(userData));
                localStorage.setItem('userInfoTimestamp', new Date().getTime().toString());
            } else {
                throw new Error('Failed to fetch user info');
            }
        }
        
        // Display user data
        document.getElementById('displayFullName').textContent = userData.fullName || 'Chưa cập nhật';
        document.getElementById('displayEmail').textContent = userData.email || 'Chưa cập nhật';
        document.getElementById('displayPhone').textContent = userData.phone || 'Chưa cập nhật';
        document.getElementById('displayAddress').textContent = userData.address || 'Chưa cập nhật';
        document.getElementById('displayRole').textContent = userData.role || 'Chưa cập nhật';
        
        // Format date
        if (userData.createdAt) {
            const date = new Date(userData.createdAt);
            document.getElementById('displayCreatedAt').textContent = date.toLocaleDateString('vi-VN');
        }
        
        // Status
        const status = userData.isActive ? 'Đang hoạt động' : 'Tạm khóa';
        document.getElementById('displayStatus').textContent = status;
        
        // Show profile and hide loading
        document.querySelector('.loading-message').style.display = 'none';
        document.getElementById('userProfile').style.display = 'block';
        
    } catch (error) {
        console.error('Error loading profile:', error);
        document.querySelector('.loading-message').innerHTML = '<p style="color: #ca1515;">Không thể tải thông tin. Vui lòng <a href="/dang-nhap">đăng nhập lại</a>.</p>';
    }
});

function editProfile() {
    alert('Tính năng chỉnh sửa thông tin đang được phát triển!');
}
</script>

<style>
.profile {
    padding: 80px 0;
}

.profile__form {
    background: #fff;
    padding: 50px 40px;
    border-radius: 10px;
    box-shadow: 0 0 30px rgba(0, 0, 0, 0.1);
}

.profile__form h3 {
    color: #333;
    font-weight: 700;
    margin-bottom: 35px;
    text-align: center;
}

.profile__item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 15px 0;
    border-bottom: 1px solid #f0f0f0;
}

.profile__item:last-child {
    border-bottom: none;
}

.profile__item label {
    font-weight: 600;
    color: #333;
    min-width: 150px;
}

.profile__item span {
    color: #666;
    text-align: right;
}

.profile__actions {
    margin-top: 30px;
    text-align: center;
}

.site-btn {
    display: inline-block;
    padding: 12px 25px;
    background: #ca1515;
    color: #fff;
    border: none;
    font-size: 16px;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 1px;
    border-radius: 5px;
    cursor: pointer;
    margin: 0 10px;
    transition: all 0.3s;
    text-decoration: none;
}

.site-btn:hover {
    background: #a91212;
}

.site-btn-outline {
    display: inline-block;
    padding: 12px 25px;
    background: transparent;
    color: #333;
    border: 2px solid #ddd;
    font-size: 16px;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 1px;
    border-radius: 5px;
    cursor: pointer;
    margin: 0 10px;
    transition: all 0.3s;
    text-decoration: none;
}

.site-btn-outline:hover {
    border-color: #ca1515;
    color: #ca1515;
}

.loading-message {
    text-align: center;
    padding: 50px 0;
    color: #666;
}
</style> 